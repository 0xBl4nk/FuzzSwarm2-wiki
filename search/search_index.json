{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to FuzzSwarm","text":"<p>FuzzSwarm is a powerful fuzzing and brute force tool, similar to ffuf, designed to test web applications through HTTP POST and GET methods. It helps discover vulnerabilities by sending various payloads to endpoints and analyzing the responses.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Fuzzing via GET and POST requests</li> <li>Support for wordlists and numeric ranges</li> <li>Ability to set custom headers and use JSON data</li> <li>Filters based on response size</li> <li>Multithreading and timeout control</li> <li>SSL and proxy support</li> <li>Scripted fuzzing (e.g., SSTI)</li> </ul> <p>Ready to get started? Head to the Installation section for setup instructions.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":""},{"location":"faq/#how-do-i-install-fuzzswarm","title":"How do I install FuzzSwarm?","text":"<p>Follow the installation guide to install FuzzSwarm.</p>"},{"location":"faq/#can-i-use-fuzzswarm-with-https","title":"Can I use FuzzSwarm with HTTPS?","text":"<p>Yes, FuzzSwarm supports SSL connections. See the SSL and Proxy Setup for more details.</p>"},{"location":"faq/#what-is-the-difference-between-wordlists-and-ranges","title":"What is the difference between wordlists and ranges?","text":"<ul> <li>Wordlists: A file with a list of values.</li> <li>Ranges: A numeric interval defined by the user (e.g., 1-1000).</li> </ul> <p>For more information, check the Usage Guide.</p>"},{"location":"ssl_proxy/","title":"SSL and Proxy Setup","text":"<p>FuzzSwarm supports SSL and proxy configurations for more advanced use cases. These settings can be managed through a <code>.env</code> file.</p>"},{"location":"ssl_proxy/#configuring-the-env-file","title":"Configuring the .env File","text":"<pre><code>HTTP_PROXY=http://127.0.0.1:8000\nSSL_CERT_PATH=PATH_TO_CERT\n</code></pre> <p>To use the proxy and SSL features, use the --use-proxy and --use-ssl flags:</p> <pre><code>./FuzzSwarm -u http://example.com/api/FUZZ -W wordlist.txt --use-proxy --use-ssl\n</code></pre>"},{"location":"Getting%20Started/installation/","title":"Installation Guide","text":"<p>Follow the steps below to install and build FuzzSwarm on your system.</p>"},{"location":"Getting%20Started/installation/#prerequisites","title":"Prerequisites","text":"<p>Ensure you have the following tools installed:</p> <ul> <li>Golang (version 1.23.1 or higher)</li> <li>Git</li> <li>Make</li> </ul>"},{"location":"Getting%20Started/installation/#steps-to-install","title":"Steps to Install","text":"<ol> <li>Clone the FuzzSwarm repository from GitHub:    <pre><code>git clone https://github.com/0xBl4nk/FuzzSwarm2\n</code></pre></li> <li>Navigate to the project directory:    <pre><code>cd FuzzSwarm2\n</code></pre></li> <li> <p>Build the application using make:    <pre><code>make build\n</code></pre> This command will create the FuzzSwarm binary in the current directory.</p> </li> <li> <p>To verify the installation, run the following command:    <pre><code>./FuzzSwarm --help\n</code></pre></p> </li> </ol> <p>You're now ready to start using FuzzSwarm. Learn how to use it in the Usage Guide.</p>"},{"location":"Getting%20Started/Usage/basic_usage/","title":"Basic Usage","text":"<p>In its simplest form, FuzzSwarm requires the following parameters:</p> <ul> <li>--url or -u: The target URL.</li> <li>--wordlist or -W: The path to a wordlist file for fuzzing.</li> <li>--range or -R: An alternative to wordlists, a numeric range for fuzzing.</li> </ul>"},{"location":"Getting%20Started/Usage/basic_usage/#example-fuzzing-a-get-endpoint-with-a-wordlist","title":"Example: Fuzzing a GET Endpoint with a Wordlist","text":"<pre><code>./FuzzSwarm -u http://example.com/api/endpoint/FUZZ -W wordlist.txt\n</code></pre> <ul> <li>FUZZ is the placeholder in the URL that will be replaced by each entry in the wordlist.</li> </ul>"},{"location":"Getting%20Started/Usage/basic_usage/#example-fuzzing-a-get-endpoint-with-a-numeric-range","title":"Example: Fuzzing a GET Endpoint with a Numeric Range","text":"<pre><code>./FuzzSwarm -u http://example.com/api/endpoint/FUZZ -R 1-1000,3\n</code></pre> <ul> <li><code>1-1000</code> defines the range of numbers to test.</li> <li><code>,3</code> formats the numbers with leading zeros (e.g., 001, 002, etc.).</li> </ul> <p>Learn how to perform POST request fuzzing.</p>"},{"location":"Getting%20Started/Usage/fuzzing_post/","title":"Fuzzing with POST Requests","text":"<p>When fuzzing POST requests, you need to specify the method, data, and optionally, headers.</p>"},{"location":"Getting%20Started/Usage/fuzzing_post/#basic-post-example","title":"Basic POST Example","text":"<pre><code>./FuzzSwarm -u http://example.com/login -X POST -d 'username=FUZZ&amp;password=password'\n</code></pre> <ul> <li><code>FUZZ</code> is used in the POST data, and the payloads will come from a wordlist or range.</li> </ul>"},{"location":"Getting%20Started/Usage/fuzzing_post/#using-json-and-custom-headers","title":"Using JSON and Custom Headers","text":"<p>For fuzzing endpoints that accept JSON data, you can set custom headers to specify the content type and send JSON payloads:</p> <pre><code>./FuzzSwarm -u http://example.com/login -X POST -H \"Content-Type: application/json\" -d '{\"username\": \"FUZZ\", \"password\": \"password\"}'\n</code></pre> <p>Move on to learn about filters and configuration.</p>"},{"location":"Getting%20Started/Usage/overview/","title":"Usage Overview","text":"<p>FuzzSwarm can perform fuzzing on both GET and POST requests, with support for wordlists, numeric ranges, custom headers, and more.</p> <p>At the core of FuzzSwarm, the following components are essential for basic usage:</p> <ul> <li>URL: The target URL where the fuzzing will be performed.</li> <li>Wordlist: A list of values used to replace placeholders in the URL or POST data.</li> <li>Range: A numeric range to be used for fuzzing (e.g., for brute-forcing numeric values).</li> </ul>"},{"location":"Getting%20Started/Usage/overview/#next-steps","title":"Next Steps","text":"<ul> <li>Basic Usage</li> <li>Fuzzing with POST</li> </ul>"},{"location":"Getting%20Started/Usage/advanced/filters_config/","title":"Filters and Advanced Configuration","text":"<p>FuzzSwarm offers several options to filter responses and optimize performance:</p>"},{"location":"Getting%20Started/Usage/advanced/filters_config/#response-filtering","title":"Response Filtering","text":"<ul> <li>--filter-size or -f: Filter responses by size.</li> </ul> <p>Example:</p> <p><pre><code>./FuzzSwarm -u http://example.com/api/FUZZ -W wordlist.txt -f 200\n</code></pre> This will only display responses that are not 200 bytes.</p>"},{"location":"Getting%20Started/Usage/advanced/filters_config/#verbose-output","title":"Verbose Output","text":"<p>To see full response bodies, use the --verbose flag: <pre><code>./FuzzSwarm -u http://example.com/api/FUZZ -W wordlist.txt --verbose\n</code></pre></p>"},{"location":"Getting%20Started/Usage/advanced/filters_config/#threads-and-timeout","title":"Threads and Timeout","text":"<ul> <li><code>--threads or -t</code>: Set the number of threads to use. = <code>--timeout</code>: Set the timeout for requests in seconds.</li> </ul> <p>Example with multiple threads and a 5-second timeout:</p> <pre><code>./FuzzSwarm -u http://example.com/api/FUZZ -W wordlist.txt --threads 10 --timeout 5\n</code></pre> <p>Read about scripted fuzzing for more advanced usage.</p>"},{"location":"Getting%20Started/Usage/advanced/script_fuzzing/","title":"Scripted Fuzzing","text":"<p>FuzzSwarm supports custom fuzzing scripts for specific attack types. Currently, it includes an SSTI (Server-Side Template Injection) script.</p>"},{"location":"Getting%20Started/Usage/advanced/script_fuzzing/#using-the-ssti-script","title":"Using the SSTI Script","text":"<p>The SSTI script automatically injects payloads designed to exploit template injection vulnerabilities:</p> <p><pre><code>./FuzzSwarm -u http://example.com/vulnerable/FUZZ --script ssti\n</code></pre> Future updates will introduce more scripts for different attack types.</p>"}]}